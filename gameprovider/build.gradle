//import com.ultreon.gameutils.ProjectType

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
            name = "sonatype"
        }
        maven {
            url = "https://maven.atlassian.com/3rdparty/"
        }
        google()
    }
    dependencies {
        classpath group: 'commons-io', name: 'commons-io', version: '2.13.0'
        classpath "com.google.code.gson:gson:2.10.1"
    }
}

plugins {
    id "eclipse"
    id "java"
    id "java-library"
}

version project_version
group project_group // https://maven.apache.org/guides/mini/guide-naming-conventions.html

//projectConfig {
//    type ProjectType.Gameprovider
//}

java {
    withSourcesJar()
    withJavadocJar()
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "21" // Need this here so eclipse task generates correctly.

repositories {
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    implementation
    addToJar {
        canBeResolved true
    }
}

dependencies {
    implementation api("org.jetbrains:annotations:24.0.1")
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdx_version"

    implementation "it.unimi.dsi:fastutil-core:8.5.9"
    implementation "com.google.code.findbugs:jsr305:$jsr_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    implementation api("org.xbib.elasticsearch:joptsimple:6.3.2.1")
    implementation api("org.apache.logging.log4j:log4j:$log4j_version")
    implementation api("org.apache.logging.log4j:log4j-core:$log4j_version")
    implementation api("org.apache.logging.log4j:log4j-api:$log4j_version")
    implementation api("com.formdev:flatlaf:3.2.1")

    compileOnly("net.fabricmc:fabric-loader:$fabric_version") {
        exclude group: "org.ow2.asm"
        exclude group: "org.ow2.sat4j"
    }
}

processResources {
    inputs.property "version", version
    inputs.property "ulreoncraft_version", project(":client").version
    inputs.property "gdx_version", gdx_version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }

    filesMatching("versions.properties") {
        expand "ulreoncraft_version": project(":client").version, "gdx_version": gdx_version
    }

    exclude "*.pdn", "*.xcf", "*.ps"
}

repositories {
    maven {
        url = "https://maven.fabricmc.net"
        name = "FabricMC"
    }
}

jar {
    finalizedBy build
    manifest {
        attributes 'Implementation-Title': 'QBubbles',
                'Implementation-Vendor': 'Ultreon Team',
                project_version: "1.0-indev1",
                'Main-Class': 'net.fabricmc.impl.launch.knot.KnotClient',
                'Multi-Release': 'true'
    }
    from(configurations.addToJar.collect {
        zipTree(it).matching {
            exclude "*.RSA", "*.SF", "*.MF"
        }
    })
    exclude "*.RSA", "*.SF", "*.MF"
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

build {
    finalizedBy ":desktop-merge:build"
    finalizedBy ":desktop:build"
    finalizedBy ":client:build"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
